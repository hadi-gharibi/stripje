name: Category Encoders Compatibility

on:
  # Run on all pushes to any branch (catches feature branches)
  push:
  # Run on all pull requests targeting main
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  test-category-encoders:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        # python-version: ["3.10", "3.11", "3.12"]
        test-scenario:
          # Test latest stable versions (recommended for most users)
          - name: "latest-stable"
            category-encoders-version: "latest"
            sklearn-version: "latest"

          # Test 2.7.x series (last version before sklearn 1.6.0 requirement)
          - name: "ce-2.7-sklearn-1.5"
            category-encoders-version: "2.7.0"
            sklearn-version: "1.5.2"

          # Test 2.8.x series with sklearn 1.6.x (minimum for 2.8+)
          - name: "ce-2.8-sklearn-1.6"
            category-encoders-version: "2.8.0"
            sklearn-version: "1.6.0"

        include:
          # Test development version on latest Python only
          - python-version: "3.12"
            test-scenario:
              name: "dev-version"
              category-encoders-version: "git+https://github.com/scikit-learn-contrib/category_encoders.git"
              sklearn-version: "latest"

        exclude:
          # Python 3.12 may have compatibility issues with older versions
          - python-version: "3.12"
            test-scenario:
              name: "ce-2.6-sklearn-1.0"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: false

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ matrix.test-scenario.name }}-${{ hashFiles('uv.lock') }}

    - name: Install scikit-learn
      run: |
        if [ "${{ matrix.test-scenario.sklearn-version }}" = "latest" ]; then
          uv add scikit-learn --no-sync --python ${{ matrix.python-version }}
        else
          uv add scikit-learn==${{ matrix.test-scenario.sklearn-version }} --no-sync --python ${{ matrix.python-version }}
        fi

    - name: Install category encoders
      run: |
        if [ "${{ matrix.test-scenario.category-encoders-version }}" = "latest" ]; then
          uv add category_encoders --no-sync --python ${{ matrix.python-version }}
        elif [[ "${{ matrix.test-scenario.category-encoders-version }}" == git+* ]]; then
          uv add "${{ matrix.test-scenario.category-encoders-version }}" --no-sync --python ${{ matrix.python-version }}
        else
          uv add category_encoders==${{ matrix.test-scenario.category-encoders-version }} --no-sync --python ${{ matrix.python-version }}
        fi

    - name: Install package and test dependencies
      run: |
        uv sync --extra dev --group testing --python ${{ matrix.python-version }}

    - name: Show installed versions
      run: |
        uv run python -c "
        import sklearn, category_encoders, numpy, pandas
        print(f'scikit-learn: {sklearn.__version__}')
        print(f'category_encoders: {category_encoders.__version__}')
        print(f'numpy: {numpy.__version__}')
        print(f'pandas: {pandas.__version__}')
        "

    - name: Run category encoders tests
      run: |
        uv run pytest tests/test_transformers/test_contrib/ -v --tb=short \
          --maxfail=1 -x --no-cov

    - name: Run category encoders integration tests
      run: |
        uv run pytest tests/test_integration/test_category_encoders_integration.py \
          -k "test_quick_encoder_compatibility or test_high_cardinality_with_unknown_categories or test_memory_efficiency_with_large_encodings or test_category_encoders_module_available" \
          -v --no-cov


  test-edge-cases:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.11
      uses: actions/setup-python@v6
      with:
        python-version: "3.11"

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        export PATH="$HOME/.local/bin:$PATH"
        uv --version

    - name: Install dependencies
      run: |
        uv sync --extra dev --group testing
        uv add category_encoders

    - name: Run category encoders edge case tests
      run: |
        uv run pytest tests/test_integration/test_category_encoders_integration.py \
          -k "test_high_cardinality_with_unknown_categories or test_memory_efficiency_with_large_encodings" \
          -v --no-cov
